Things to do:

More unit tests

More documentation of existing classes

Make the additional new fields in MIDIMsg move to MIDIBigMsg

Add Windows driver usage examples/tests, sequencer, sysex send/recv

Add Mac OSX driver usage examples/tests, sequencer, sysex send/recv

Add folder with the executable files of examples (win32, Mac, Linux)

Make the simple class, which integrates all needs of "dummy" (for ex. see utils.h)

Rewrite class MIDIMultiTrack as vector<MIDITrack>

Rewrite class MIDITrack as vector<MIDITimedBigMessage>

Rewrite class MIDIMessage as vector<unsigned char> of variable length

Rewrite class MIDISystemExclusive as vector<unsigned char> and rename it into
MIDIVariableLengthData

Add function (into class MIDIManager?):
-the total time of the playback of the music
-the time, which passed from the beginning of the playback
-bool "does continue now the playback of music?"

Remove the (Sequencer) problems:
-in file "t1_after_t0.mid" play first note in track 0, but not play second note in track 1
-in file "t0_after_t1.mid" first note in track 1 sometimes incorrect instrument number:
 (default) 1 (Piano) instead of correct 19 (Organ)

Test parser with big collection of complex midi files:
for ex. rewrite midi file and compare result with using xml copy of both files,
see "Midi -> XML" converter on http://en.nemidi.com/converters.html
Note: this service work not correct with midi event types "0xFF 0x21" and "0xF7"

See in code comment labels: "TODO@VRM" and "TO DO".

